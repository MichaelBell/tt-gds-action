name: 'Tiny Tapeout GDS Action (OpenLane 2)'
description: 'This action builds a GDS file from your Tiny Tapeout project using OpenLane 2'
branding:
  color: purple
  icon: layers

runs:
  using: 'composite'
  steps:
    - name: Set up environment variables
      shell: bash
      run: |
        cat << EOF >> $GITHUB_ENV
        OPENLANE_TAG=2.0.0b15
        OPENLANE_ROOT=$GITHUB_WORKSPACE/openlane
        PDK=sky130A
        EOF

    # Install packages for 'Render PNG from GDS' step:
    - name: Install prerequisites
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: librsvg2-bin pngquant # librsvg2-bin for rsvg-convert; pngquant for heavy PNG compression.
        version: tt05 # I think naming a version builds a reusable packages cache for that name.

    - name: Checkout tt-support-tools repo
      uses: actions/checkout@v4
      with:
        repository: tinytapeout/tt-support-tools
        path: tt
        ref: tt05

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies

    - name: Install tt-support-tools dependencies
      shell: bash
      run: pip install -r tt/requirements.txt

    - name: Fetch verilog and build config
      shell: bash
      run: ./tt/tt_tool.py --create-user-config

    - name: Checkout OpenLane 2 repo
      uses: actions/checkout@v4
      with:
        repository: efabless/openlane2
        path: ${{ env.OPENLANE_ROOT }}
        ref: ${{ env.OPENLANE_TAG }}

    - uses: cachix/install-nix-action@v20

    - uses: cachix/cachix-action@v12
      with:
        name: openlane
        extraPullNames: openlane

    - name: Make GDS with OpenLane 2
      shell: bash
      run: |
        nix-shell $OPENLANE_ROOT/shell.nix --run "python -m openlane --run-tag wokwi config.json"
        # The next command doesn't really harden, it only creates the required commit_id.json file:
        ./tt/tt_tool.py --harden --openlane2

    - name: Show build files (for debugging)
      shell: bash
      run: find runs/wokwi/

    - name: Yosys warnings
      shell: bash
      run: ./tt/tt_tool.py --print-warnings --openlane2 >> $GITHUB_STEP_SUMMARY

    - name: Routing summary
      shell: bash
      run: echo Routing summary is not yet available for OpenLane 2 >> $GITHUB_STEP_SUMMARY
      #run: ./tt/tt_tool.py --print-stats --openlane2 >> $GITHUB_STEP_SUMMARY

    - name: Cell usage summary
      shell: bash
      run: ./tt/tt_tool.py --print-cell-category --openlane2 >> $GITHUB_STEP_SUMMARY

    - name: Publish build logs
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: GDS_logs
        path: |
          src/*
          runs/wokwi/*

    - name: Publish GDS artifact
      uses: actions/upload-artifact@v3
      with:
        name: GDS
        path: |
          src/*
          runs/wokwi/final/*
          runs/wokwi/05-yosys-synthesis/yosys-synthesis.log
          runs/wokwi/05-yosys-synthesis/reports/stat.json
          runs/wokwi/*.log
          runs/wokwi/resolved.json
          LICENSE

    # Create and store PNG...
    - name: Render PNG from GDS
      shell: bash
      run: './tt/tt_tool.py --create-png --openlane2 2>&1 || echo "WARNING: Failed to render PNG preview from GDS; error $?"'

    - name: Upload gds_render (png) artifact
      uses: actions/upload-artifact@v3
      with:
        name: gds_render
        path: 'gds_render.png'
